{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nexport function createUser(_ref) {\n  var email, password, response, token;\n  return _regeneratorRuntime.async(function createUser$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          email = _ref.email, password = _ref.password;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(axios.post(\"http://192.168.4.133/users/register\", {\n            email: email,\n            password: password\n          }));\n\n        case 3:\n          response = _context.sent;\n          token = response.data;\n          return _context.abrupt(\"return\", token);\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function loginUser(email, password) {\n  var response, token;\n  return _regeneratorRuntime.async(function loginUser$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(axios.post(\"http://192.168.4.133:3080/users/login\", {\n            email: email,\n            password: password\n          }));\n\n        case 2:\n          response = _context2.sent;\n          token = response.data;\n          return _context2.abrupt(\"return\", token);\n\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function CreateCampaign(credentials) {\n  var title, subtitle, description, risks, budget, picture, rewards, response, data;\n  return _regeneratorRuntime.async(function CreateCampaign$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          title = credentials.title, subtitle = credentials.subtitle, description = credentials.description, risks = credentials.risks, budget = credentials.budget, picture = credentials.picture, rewards = credentials.rewards;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(axios.post(\"http://192.168.4.133:3080/projects/campaign\", {\n            campaign_info: {\n              title: title,\n              subtitle: subtitle\n            },\n            total_funds: budget,\n            project_story: {\n              description: description,\n              factors: risks\n            },\n            user_id: 15,\n            rewards_list: rewards,\n            image: picture\n          }));\n\n        case 3:\n          response = _context3.sent;\n          data = response.data;\n          return _context3.abrupt(\"return\", data);\n\n        case 6:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"names":["axios","createUser","email","password","post","response","token","data","loginUser","CreateCampaign","credentials","title","subtitle","description","risks","budget","picture","rewards","campaign_info","total_funds","project_story","factors","user_id","rewards_list","image"],"sources":["C:/Users/musta/Desktop/New folder/Crowd-Funding-Application/utils/auth.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { Alert } from \"react-native\";\r\n\r\nexport async function createUser({ email, password }) {\r\n  const response = await axios.post(\"http://192.168.4.133/users/register\", {\r\n    email: email,\r\n    password: password,\r\n  });\r\n  const token = response.data;\r\n  return token;\r\n}\r\n\r\nexport async function loginUser(email, password) {\r\n  const response = await axios.post(\"http://192.168.4.133:3080/users/login\", {\r\n    email: email,\r\n    password: password,\r\n  });\r\n  const token = response.data;\r\n  return token;\r\n}\r\n\r\nexport async function CreateCampaign(credentials) {\r\n  let { title, subtitle, description, risks, budget, picture, rewards } =\r\n    credentials;\r\n  const response = await axios.post(\r\n    \"http://192.168.4.133:3080/projects/campaign\",\r\n    {\r\n      campaign_info: {\r\n        title: title,\r\n        subtitle: subtitle,\r\n      },\r\n      total_funds: budget,\r\n      project_story: {\r\n        description: description,\r\n        factors: risks,\r\n      },\r\n      user_id: 15,\r\n      rewards_list: rewards,\r\n      image: picture,\r\n    }\r\n  );\r\n  const data = response.data;\r\n  return data;\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,OAAO,SAAeC,UAAf;EAAA;EAAA;IAAA;MAAA;QAAA;UAA4BC,KAA5B,QAA4BA,KAA5B,EAAmCC,QAAnC,QAAmCA,QAAnC;UAAA;UAAA,iCACkBH,KAAK,CAACI,IAAN,CAAW,qCAAX,EAAkD;YACvEF,KAAK,EAAEA,KADgE;YAEvEC,QAAQ,EAAEA;UAF6D,CAAlD,CADlB;;QAAA;UACCE,QADD;UAKCC,KALD,GAKSD,QAAQ,CAACE,IALlB;UAAA,iCAMED,KANF;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AASP,OAAO,SAAeE,SAAf,CAAyBN,KAAzB,EAAgCC,QAAhC;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA,iCACkBH,KAAK,CAACI,IAAN,CAAW,uCAAX,EAAoD;YACzEF,KAAK,EAAEA,KADkE;YAEzEC,QAAQ,EAAEA;UAF+D,CAApD,CADlB;;QAAA;UACCE,QADD;UAKCC,KALD,GAKSD,QAAQ,CAACE,IALlB;UAAA,kCAMED,KANF;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AASP,OAAO,SAAeG,cAAf,CAA8BC,WAA9B;EAAA;EAAA;IAAA;MAAA;QAAA;UACCC,KADD,GAEHD,WAFG,CACCC,KADD,EACQC,QADR,GAEHF,WAFG,CACQE,QADR,EACkBC,WADlB,GAEHH,WAFG,CACkBG,WADlB,EAC+BC,KAD/B,GAEHJ,WAFG,CAC+BI,KAD/B,EACsCC,MADtC,GAEHL,WAFG,CACsCK,MADtC,EAC8CC,OAD9C,GAEHN,WAFG,CAC8CM,OAD9C,EACuDC,OADvD,GAEHP,WAFG,CACuDO,OADvD;UAAA;UAAA,iCAGkBjB,KAAK,CAACI,IAAN,CACrB,6CADqB,EAErB;YACEc,aAAa,EAAE;cACbP,KAAK,EAAEA,KADM;cAEbC,QAAQ,EAAEA;YAFG,CADjB;YAKEO,WAAW,EAAEJ,MALf;YAMEK,aAAa,EAAE;cACbP,WAAW,EAAEA,WADA;cAEbQ,OAAO,EAAEP;YAFI,CANjB;YAUEQ,OAAO,EAAE,EAVX;YAWEC,YAAY,EAAEN,OAXhB;YAYEO,KAAK,EAAER;UAZT,CAFqB,CAHlB;;QAAA;UAGCX,QAHD;UAoBCE,IApBD,GAoBQF,QAAQ,CAACE,IApBjB;UAAA,kCAqBEA,IArBF;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module"}